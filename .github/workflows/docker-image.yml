#workflow名称
name: Build images(Multi architecture)
# 触发条件
on:
#github页面手动触发
  workflow_dispatch: 
    inputs:
      inputmirror:
        description: 'inputmirror'
        required: true
        default: 'nginx:1.25-alpine'
      outputmirror:
        description: 'outputmirror'
        required: true
        default: 'registry.cn-beijing.aliyuncs.com/gitosc/nginx:1.25-alpine'
      outputmirror_tag:
        description: 'outputmirror_tag'
        required: true
        default: 'latest'
        
jobs:
  build-image:
    #运行的环境  
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Shanghai
    steps:
      # 拉取代码，同时获取tag，如果获取不到则默认值为master
      - uses: actions/checkout@v3
          
     # Docker配置多平台环境
      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v2  
        
      # 登录镜像仓库
      - name: Login to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PWD }}   
          
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: |
            ${{ inputs.inputmirror }}
            ${{ inputs.outputmirror }}

      - name: "Defining Mirrors"
        run: echo "FROM ${{ inputs.inputmirror }}" > ./Dockerfile
          
      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        id: docker_build
        with:
          context: .
          file: ./Dockerfile
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          platforms: |
            linux/amd64
            linux/arm64
          tags: |
            ${{ inputs.outputmirror }}:${{ inputs.outputmirror_tag }}

      - name: Image information
        run: |
        echo "inputmirror: ${{ inputs.inputmirror }}" /
        "outputsmirror: ${{ steps.docker_build.outputs.tags }}" /
        "imageinformation: ${{ steps.docker_build.outputs.imageid }}"
